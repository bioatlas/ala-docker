version: '3.7'

networks:
  basnet:
    external: true

secrets:
  biodiversitydata.se.crt:
    file: ./nginx-proxy-certs/biodiversitydata.se.crt
  biodiversitydata.se.key:
    file: ./nginx-proxy-certs/biodiversitydata.se.key
  htpasswd:
    file: ./env/.htpasswd

configs:
  config_nginx-proxy:
    file: ./webserver/nginx-proxy.conf
  config_ala-cors:
    file: ./webserver/ala-cors.conf
  config_biocache:
    file: ./config/biocache-config.properties
  config_logger-client:
    file: ./config/logger-client.properties
  config_ala_hub:
    file: ./config/ala-hub-config.properties
  config_blacklist:
    file: ./config/blacklistMediaUrls.txt
  config_imageservice:
    file: ./config/image-service-config.yml
  config_apiservice:
    file: ./config/webapi-config.properties
  config_specieslist:
    file: ./config/specieslist-webapp-config.properties
  config_bieindex:
    file: ./config/bie-index-config.properties
  config_biehub:
    file: ./config/ala-bie-config.properties
  config_postgis:
    file: ./postgis/pg_hba.conf
  config_spatial-hub:
    file: ./config/spatial-hub-config.yml
  config_spatial-hub-menu-config:
    file: ./spatialhub/menu-config.json
  config_spatial-hub-view-config:
    file: ./spatialhub/view-config.json
  config_spatial-service:
    file: ./config/spatial-service-config.yml
  config_sds:
    file: ./config/sds-config.properties

services:

  proxy:
    image: jwilder/nginx-proxy:1.3.0
    init: true
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./webserver/conf.d:/etc/nginx/conf.d
    secrets:
      - source: biodiversitydata.se.crt
        target: /etc/nginx/certs/biodiversitydata.se.crt
      - source: biodiversitydata.se.key
        target: /etc/nginx/certs/biodiversitydata.se.key
    configs:
      - source: config_nginx-proxy
        target: /etc/nginx/proxy.conf
      - source: config_ala-cors
        target: /etc/nginx/ala-cors.conf
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - basnet

  biocacheservice:
    image: bioatlas/ala-biocacheservice:v2.5.1
    depends_on:
      - cassandradb
      - solr
    environment:
      JAVA_OPTS: -Xmx8g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    volumes:
      - data_nameindex:/data/lucene/namematching
    env_file: ./env/.envbiocacheservice
    configs:
      - source: config_biocache
        target: /data/biocache/config/biocache-config.properties
      - source: config_logger-client
        target: /data/logger-client/config/logger-client.properties
    networks:
      - basnet
    deploy:
      placement:
        constraints:
          - node.hostname == live-manager-1
    command: /bin/sh -c "rm /usr/local/tomcat/conf/Catalina/localhost/ROOT.xml && envsubst < /tmp/context.xml > /usr/local/tomcat/conf/Catalina/localhost/ws.xml && catalina.sh run"

  biocachehub:
    image: bioatlas/ala-biocachehub:v3.2.9-BAS
    depends_on:
      - biocacheservice
    env_file: ./env/.envbiocachehub
    environment:
      JAVA_OPTS: -Xmx4g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    configs:
      - source: config_ala_hub
        target: /data/ala-hub/config/ala-hub-config.properties
    networks:
      - basnet

  nameindex:
    image: bioatlas/ala-nameindex:v3.5
    #image: bioatlas/ala-dyntaxaindex:v0.4
    command: /bin/ash
    volumes:
      - data_nameindex:/data/lucene/namematching
    networks:
      - basnet
    deploy:
      restart_policy:
        condition: none

  biocachebackend:
    image: bioatlas/ala-biocachebackend:v2.6.0
    command: /bin/ash
    environment:
      - BIOCACHE_MEMORY_OPTS=-Xmx16g -Xms1g -Xss1024k
    volumes:
      - data_nameindex:/data/lucene/namematching
      - data_biocachebackend:/data
    configs:
      - source: config_blacklist
        target: /data/biocache/config/blacklistMediaUrls.txt
      - source: config_biocache
        target: /data/biocache/config/biocache-config.properties
    networks:
      - basnet
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == live-manager-1

  solr:
    image: bioatlas/ala-solr:v0.6
    environment:
      SOLR_HEAP: 4g
      SOLR_OPTS: "-Dlog4j2.formatMsgNoLookups=true"
    volumes:
      - data_solr:/opt/solr
    networks:
      - basnet

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.0.0"
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - node.name=elasticsearch
    volumes:
      - data_images_elasticsearch:/usr/share/elasticsearch/data
    networks:
      - basnet

  imageservice:
    image: bioatlas/ala-imageservice:v1.0
    depends_on:
      - psqldbimage
    environment:
      JAVA_OPTS: -Xmx4g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    env_file: ./env/.envimage
    volumes:
      - data_images:/data/image-service/store
    configs:
      - source: config_imageservice
        target: /tmp/image-service-config.yml
    command: /bin/ash -c "envsubst < /tmp/image-service-config.yml > /data/image-service/config/image-service-config.yml && catalina.sh run"
    networks:
      - basnet

  imagestore:
    image: bioatlas/ala-imagestore:v1.0
    volumes:
      - data_images:/data/image-service/store
    networks:
      - basnet

  psqldbimage:
    image: postgres:9.6.8-alpine
    env_file: ./env/.envimage
    volumes:
      - db_data_imageservice:/var/lib/postgresql/data
    networks:
      - basnet

  apiservice:
    image: bioatlas/ala-api:v1.0
    depends_on:
      - mysqldbapi
    environment:
      JAVA_OPTS: -Xmx4g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    env_file: ./env/.envapi
    configs:
      - source: config_apiservice
        target: /tmp/webapi-config.properties
    command: /bin/ash -c "envsubst < /tmp/webapi-config.properties > /data/webapi/config/webapi-config.properties && catalina.sh run"
    networks:
      - basnet

  mysqldbapi:
    image: mysql:5.7
    env_file: ./env/.envapi
    volumes:
      - db_data_apiservice:/var/lib/mysql
    networks:
      - basnet

  specieslists:
    image: bioatlas/ala-specieslists:v3.5.9
    environment:
      JAVA_OPTS: -Xmx4g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    env_file: ./env/.envspecieslists
    configs:
      - source: config_specieslist
        target: /tmp/specieslist-webapp-config.properties
    volumes:
      - data_nameindex:/data/lucene/namematching
    command: /bin/ash -c "envsubst < /tmp/specieslist-webapp-config.properties > /data/specieslist-webapp/config/specieslist-webapp-config.properties && catalina.sh run"
    networks:
      - basnet

  mysqldbspecieslist:
    image: mysql:5.7
    environment:
      LANG: C.UTF-8
    env_file: ./env/.envspecieslists
    command: --sql_mode=""
    volumes:
 #     - ./specieslists/db:/docker-entrypoint-initdb.d
      - db_data_specieslists:/var/lib/mysql
    networks:
      - basnet

  bieindex:
    image: bioatlas/ala-bieindex:v1.0
    environment:
      JAVA_OPTS: -Xmx4g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    configs:
      - source: config_bieindex
        target: /data/bie-index/config/bie-index-config.properties
    volumes:
      - data_bieindex:/data
    networks:
      - basnet

  biehub:
    image: bioatlas/ala-biehub:v1.0
    environment:
      JAVA_OPTS: -Xmx2g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    configs:
      - source: config_biehub
        target: /data/ala-bie/config/ala-bie-config.properties
    networks:
      - basnet

  postgis:
    image: mdillon/postgis:9.6-alpine
    #image: kartoza/postgis:9.6-2.4
    env_file: ./env/.envpostgis
    volumes:
      - db_data_postgis:/var/lib/postgresql/data
#      - ./postgis/layersdb.sql:/docker-entrypoint-initdb.d/layersdb.sql
    configs:
      - source: config_postgis
        target: /etc/postgresql/9.6/main/pg_hba.conf
    networks:
      - basnet

  geoserver:
    #image: kartoza/geoserver:2.11.2
    image: bioatlas/ala-geoserver:v0.4
    environment:
      JAVA_OPTS: -Xmx4g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    env_file: ./env/.envgeoserver
    volumes:
      - data_geoserver:/data/geoserver_data_dir
      - data_spatialservice:/data/spatial-data
    #command: /bin/bash -c "catalina.sh run & (while ! echo exit | nc localhost 8080; do sleep 100; done) && /data/geoserver-files/geoserver.sh"
    networks:
      - basnet

  spatialhub:
    image: bioatlas/ala-spatialhub:v0.4.0.1-bas
    environment:
      JAVA_OPTS: -Xmx16g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    env_file:
      - ./env/.envspatial
    volumes:
      - data_spatialhub:/data/ala/runtime/files
    configs:
      - source: config_spatial-hub
        target: /tmp/spatial-hub-config.yml
      - source: config_spatial-hub-menu-config
        target: /data/spatial-hub/config/menu-config.json
      - source: config_spatial-hub-view-config
        target: /data/spatial-hub/config/view-config.json
    command: /bin/bash -c "envsubst < /tmp/spatial-hub-config.yml > /data/spatial-hub/config/spatial-hub-config.yml && catalina.sh run"
    networks:
      - basnet

  spatialservice:
    image: bioatlas/ala-spatialservice:v0.4
    environment:
      JAVA_OPTS: -Xmx31g -Xms128m -Xss1024k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Dlog4j2.formatMsgNoLookups=true
    env_file:
      - ./env/.envspatial
    volumes:
      - data_spatialservice:/data/spatial-data
    configs:
      - source: config_spatial-service
        target: /tmp/spatial-service-config.yml
    command: /bin/bash -c "envsubst < /tmp/spatial-service-config.yml > /data/spatial-service/config/spatial-service-config.yml && catalina.sh run"
    networks:
      - basnet
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == live-manager-1

  sds:
    image: bioatlas/ala-sds:v1.1
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Dlog4j2.formatMsgNoLookups=true
    volumes:
      - data_nameindex:/data/lucene/namematching
    configs:
      - source: config_sds
        target: /data/sds/config/sds-config.properties
    networks:
      - basnet

volumes:
  db_data_imageservice:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/db_data_imageservice"
  db_data_apiservice:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/db_data_apiservice"
  data_nameindex:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_nameindex"
  data_images:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_images"
  data_biocachebackend:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_biocachebackend"
  data_solr:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_solr"
  data_images_elasticsearch:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_images_elasticsearch"
  db_data_specieslists:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/db_data_specieslists"
  db_data_postgis:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/db_data_postgis"
  data_geoserver:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_geoserver"
  data_spatialhub:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_spatialhub"
  data_spatialservice:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_spatialservice"
  data_bieindex:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=live-manager-1,rw
      device: ":/docker_nfs/var/volumes/data_bieindex"

