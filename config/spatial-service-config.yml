google:
  apikey: 'AIzaSyAJDtEeoy7Sc9pij2TAoVnmTwA34Q-2VHk'
#
# au.org.ala.spatial.service config
#
data:
  dir: '/data/spatial-data'
geoserver:
  url: 'https://spatial.bioatlas.se/geoserver'
  username: 'admin'
  password: $GEOSERVER_PASS
  canDeploy: true
  remote:
    geoserver_data_dir: '/data/geoserver_data_dir'

biocacheServiceUrl: "https://records.bioatlas.se/ws"
biocacheUrl: "https://records.bioatlas.se"
openstreetmap:
  url: "https://tile.openstreetmap.org"

slave.enable: true
service.enable: true

batch_sampling_passwords: ''
batch_sampling_points_limit: 1000000
batch_sampling_fields_limit: 1000

#
# au.org.ala.spatial.slave config
#

spatialService.url: "https://spatial.bioatlas.se/ws"
shp2pgsql.path: "/usr/bin/shp2pgsql"
gdal.dir: "/usr/bin"
gdm.dir: "/data/spatial-data/modelling/gdm/DoGdm"

slaveKey: $APIKEY
serviceKey: $APIKEY

# time between pushing status updates to the master for a task
statusTime: "3000"
retryCount: "10"
retryTime: "30000"

#
#  CAS SETTINGS
#
#  NOTE: Some of these will be ignored if default_config exists
security:
  cas:
    casServerName: https://auth.bioatlas.se
    uriFilterPattern: /manageLayers,/manageLayers/.*,/admin,/admin/.*,/alaAdmin.*
    uriExclusionFilterPattern: /assets.*,/images.*,/css.*,/js.*,/less.*,/tasks/status/.*
    authenticateOnlyIfLoggedInFilterPattern: /master,/master/.*,/tasks,/tasks/.*
    appServerName: https://spatial.bioatlas.se
    casServerUrlPrefix: https://auth.bioatlas.se/cas
    loginUrl: https://auth.bioatlas.se/cas/login
    logoutUrl: https://auth.bioatlas.se/cas/logout
    contextPath: '/ws'
    bypass: false
    disableCAS: false
    gateway: False

auth.admin_role: ROLE_ADMIN
app.http.header.userId: X-ALA-userId

headerAndFooter.baseURL: 'https://static.bioatlas.se/bs3'
ala.baseURL: 'https://bioatlas.se'
bie.baseURL: 'https://species.bioatlas.se'
bie.searchPath: '/search'

records.url: 'https://archives.ala.org.au/archives/exports/lat_lon_taxon.zip'

api_key: ''
lists.url: 'https://lists.bioatlas.se'
collections.url: 'https://collections.bioatlas.se'
sandboxHubUrl: ''
sandboxBiocacheServiceUrl: ''
phyloServiceUrl: ''
spatialHubUrl: 'https://spatial.bioatlas.se'
apiKeyCheckUrlTemplate: 'https://auth.bioatlas.se/apikey/ws/check?apikey={0}'
spatialService.remote: ''

gazField: ''
userObjectsField: ''

journalmap.api_key: ''
journalmap.url: 'https://www.journalmap.org/'

#For side by side installation with layers-service, analysis-service
#legacy.workingdir: '//data/ala/data/alaspatial/'
legacy.enabled: true

#legacy compatability type
#"link" = link legacy files into new locations
#"copy" = copy legacy files into new locations
#"move" = move legacy files into new locations
#legacy.type="link"

legacy.ANALYSIS_LAYER_FILES_PATH: '/data/ala/data/layers/analysis/'
legacy.LAYER_FILES_PATH: '/data/ala/data/layers/ready'
legacy.ALASPATIAL_OUTPUT_PATH: '/data/ala/runtime/output'

grails.plugin.elfinder.rootDir: '/data/spatial-service'

i18n.override.dir: '/data/spatial-service/config/i81n/'


#layers-store config

#Threads created for each batch intersection and each individual shape file
#layers_store.BATCH_THREAD_COUNT: 3

#Set LAYER_INDEX_URL to use REMOVE layer intersections.
#layers_store.LAYER_INDEX_URL: https://spatial.ala.org.au/layers-service

#Use local layer files for sampling or the /intersect/batch service provided by LAYER_INDEX_URL
#layers_store.LOCAL_SAMPLING: false
layers_store.LOCAL_SAMPLING: true

# Set intersect config reload time in ms
#layers_store.CONFIG_RELOAD_WAIT: 12000000

#Comma separated shape file fields to preload, or 'all'
#layers_store.PRELOADED_SHAPE_FILES: all
#layers_store.PRELOADED_SHAPE_FILES: cl22,cl20

# Grid intersection buffer size in bytes.  Must be multiple of 64.
# Only applies to grids > 80MB.
# layers_store.GRID_BUFFER_SIZE=4096
#layers_store.GRID_BUFFER_SIZE: 40960

# Number of GridCacheReader objects to open.
#layers_store.GRID_CACHE_READER_COUNT: 5

# layers_store ingestion
#layers_store.CAN_INGEST_LAYERS: false
#layers_store.CAN_UPDATE_LAYER_DISTANCES: false
#layers_store.CAN_UPDATE_GRID_CACHE: false
#layers_store.CAN_GENERATE_ANALYSIS_FILES: false
#layers_store.CAN_INTERSECT_LAYERS: false
#layers_store.CAN_GENRATE_THUMBNAILS: false

#layers_store.FIELD_STYLES: true

layers_store.GEONETWORK_URL: 'https://spatial.bioatlas.se/geonetwork'

distributions.cache.dir: "/data/spatial-service/mapCache/"
distributions.geoserver.image.url: "/ALA/wms?service=WMS&version=1.1.0&request=GetMap&sld=https://fish.ala.org.au/data/dist.sld&layers=ALA:aus1,ALA:Distributions&styles=&bbox=109,-47,157,-7&srs=EPSG:4326&format=image/png&width=400&height=400&viewparams=s:"

dataSource:
    dbCreate: update
    dialect: org.hibernatespatial.postgis.PostgisDialect
    driverClassName: org.postgresql.Driver
    url: 'jdbc:postgresql://postgis/layersdb'
    username: $POSTGRES_USER
    password: $POSTGRES_PASS

grails.serverURL: https://spatial.bioatlas.se/ws
grails.app.context: /ws
grails.cors.enabled: true

skin.layout: main
skin.fluidLayout: false
skin.orgNameLong: Bioatlas Sweden
skin.orgNameShort: Bioatlas
skin.favicon: https://bioatlas.se/wp-content/themes/atlas/img/favicon/favicon.ico
skin.homeUrl: https://bioatlas.se

#grails.controllers.upload.maxFileSize: 524288000
#grails.controllers.upload.maxRequestSize: 524288000
grails.controllers.upload.maxFileSize: 2097152000
grails.controllers.upload.maxRequestSize: 2097152000

map.lat: 62
map.lng: 16
map.zoom: 4
